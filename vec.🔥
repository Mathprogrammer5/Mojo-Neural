# defines vector struct
from random import random_float64
from random import seed

# defines function for summing up two vectors
fn sigma(a: DynamicVector[Float32], b: DynamicVector[Float32]) -> DynamicVector[Float32]:
    var vec = DynamicVector[Float32]()
    vec.reserve(len(a))
    for i in range(len(a)):
        vec[i] = a[i]+b[i]
    return vec

fn randvec(len: Int) -> DynamicVector[Float64]:
    seed()
    var vec: DynamicVector[Float64] = DynamicVector[Float64]()
    for i in range(len):
        vec.append(random_float64())
    return vec

fn logvec(vec: DynamicVector[Float64]):
        for i in range(len(vec)):
            print(vec[i])

fn logvec(vec: DynamicVector[Float32], part: Int = -1):
        for i in range(len(vec)):
            print(vec[i])
