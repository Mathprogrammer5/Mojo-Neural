# defines vector struct
from random import random_float64
from random import seed

# defines function for summing up two vectors
fn wsum(v: DynamicVector[Float64], b: DynamicVector[Float64]) -> Float64:
    var vec = DynamicVector[Float64]()
    var val: Float64 = 0.0

    for i in range(len(v)):
        vec.append(v[i]*b[i])
    
    for i in range(len(v)):
        val += vec[i]

    return val

fn randvec(len: Int) -> DynamicVector[Float64]:
    seed()
    var vec: DynamicVector[Float64] = DynamicVector[Float64]()
    for i in range(len):
        vec.append(random_float64())
    return vec

fn logvec(vec: DynamicVector[Float64]):
        for i in range(len(vec)):
            print(vec[i])

fn logvec(vec: DynamicVector[Float64], part: Int = -1):
        for i in range(len(vec)):
            print(vec[i])
